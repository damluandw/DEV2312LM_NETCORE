
CREATE TABLE DEPARTMENT(
	ID INT IDENTITY   PRIMARY KEY,
	NAME NVARCHAR(50) ,
	TIMES INT 
)
GO


CREATE TABLE COURSE(
	ID CHAR(4)  PRIMARY KEY,
	NAME NVARCHAR(50) 
)
GO



CREATE TABLE CLASS(
	ID INT IDENTITY   PRIMARY KEY,
	NAME CHAR(7) ,
	COURSEID CHAR(4) FOREIGN KEY (COURSEID)REFERENCES COURSE(ID),
	DEPARTMENTID INT FOREIGN KEY (DEPARTMENTID)REFERENCES  DEPARTMENT(ID),
	ISACTIVE TINYINT 
)
GO


CREATE TABLE POSITION(
	ID CHAR(3)  PRIMARY KEY,
	NAME NVARCHAR(20) 
)
GO



CREATE TABLE STUDENT(
	ID CHAR(10)  PRIMARY KEY,
	FULLNAME NVARCHAR(50) ,
	BIRTHDAY DATE ,
	EMAIL VARCHAR(50) ,
	PHONE VARCHAR(15) ,
	GENDER BIT ,
	CLASSID INT FOREIGN KEY (CLASSID)REFERENCES CLASS(ID),
	POSITIONID CHAR(3) FOREIGN KEY (POSITIONID)REFERENCES POSITION(ID),
	ISACTIVE TINYINT 
)
GO




CREATE TABLE LECTURER(
	ID CHAR(10)  PRIMARY KEY,
	FULLNAME VARCHAR(50) ,
	DEPARTMENTID INT FOREIGN KEY (DEPARTMENTID)REFERENCES DEPARTMENT(ID),
	POSITIONID CHAR(3) FOREIGN KEY (POSITIONID)REFERENCES POSITION(ID),
	BIRTHDAY DATE ,
	EMAIL VARCHAR(50) ,
	PHONE VARCHAR(15) ,
	ISACTIVE TINYINT 
)
GO



CREATE TABLE ACCOUNTSTUDENT(
	ID INT IDENTITY   PRIMARY KEY,
	USERNAME VARCHAR(10) UNIQUE,
	PASSWORD VARCHAR(255) ,
	CREATEBY VARCHAR(20) ,
	CREATEDATE DATETIME ,
	UPDATEDATE DATETIME ,
	ISACTIVE TINYINT ,
	STUDENTID CHAR(10) FOREIGN KEY (STUDENTID)REFERENCES STUDENT(ID)
)
GO



CREATE TABLE ACCOUNTLECTURER(
	ID INT IDENTITY   PRIMARY KEY,
	USERNAME VARCHAR(10) UNIQUE,
	PASSWORD VARCHAR(255) ,
	CREATEBY VARCHAR(20) ,
	CREATEDATE DATETIME ,
	UPDATEDATE DATETIME ,
	ISACTIVE TINYINT ,
	LECTURERID CHAR(10) FOREIGN KEY (LECTURERID)REFERENCES LECTURER(ID))
GO



CREATE TABLE ROLES(
	ID INT IDENTITY   PRIMARY KEY,
	ROLENAME NVARCHAR(100) ,
	ISACTIVE TINYINT 
)
GO



CREATE TABLE ACCOUNTADMIN(
	ID INT IDENTITY   PRIMARY KEY,
	FULLNAME NVARCHAR(50) ,
	USERNAME VARCHAR(20) UNIQUE,
	PASSWORD VARCHAR(255) ,
	CREATEBY VARCHAR(20) ,
	CREATEDATE DATETIME ,
	UPDATEDATE DATETIME ,
	ISACTIVE TINYINT ,
	ROLEID INT FOREIGN KEY (ROLEID)REFERENCES ROLES(ID)
)
GO




CREATE TABLE SEMESTER(
	ID INT IDENTITY   PRIMARY KEY,
	SEMESTER CHAR(2) ,
	SCHOOLYEAR CHAR(10) ,
	DATEOPENSTUDENT DATETIME ,
	DATEENDSTUDENT DATETIME ,
	DATEENDCLASS DATETIME ,
	DATEENDLECTURER DATETIME ,
	ISACTIVE TINYINT 
)
GO


CREATE TABLE TYPEQUESTION(
	ID INT IDENTITY   PRIMARY KEY,
	NAME NVARCHAR(100) 
)
GO



CREATE TABLE QUESTION(
	ID INT IDENTITY   PRIMARY KEY,
	QUESTION VARCHAR(255) ,
	TYPEQUESTIONID INT FOREIGN KEY (TYPEQUESTIONID)REFERENCES TYPEQUESTION(ID),
	SEMESTERID INT FOREIGN KEY (SEMESTERID)REFERENCES SEMESTER(ID)
)
GO


CREATE TABLE ANSWER(
	ID INT IDENTITY   PRIMARY KEY,
	QUESTIONID INT FOREIGN KEY (QUESTIONID)REFERENCES QUESTION(ID),
	ANSWER VARCHAR(255) ,
	ANSWERSCORE INT 
)
GO




CREATE TABLE SELFANSWER(
	ID INT IDENTITY   PRIMARY KEY,
	STUDENTID CHAR(10) FOREIGN KEY (STUDENTID)REFERENCES STUDENT(ID),
	ANSWERID INT FOREIGN KEY (ANSWERID)REFERENCES ANSWER(ID)
)
GO




CREATE TABLE CLASSANSWER(
	ID INT IDENTITY   PRIMARY KEY,
	STUDENTID CHAR(10) FOREIGN KEY (STUDENTID)REFERENCES STUDENT(ID),
	ANSWERID INT FOREIGN KEY (ANSWERID)REFERENCES ANSWER(ID),
	CREATEBY CHAR(10) 
)
GO



CREATE TABLE SUMARYOFPOINT(
	ID INT IDENTITY   PRIMARY KEY,
	STUDENTID CHAR(10) FOREIGN KEY (STUDENTID)REFERENCES STUDENT(ID),
	SEMESTERID INT FOREIGN KEY (SEMESTERID)REFERENCES SEMESTER(ID),
	SELFPOINT INT ,
	CLASSPOINT INT ,
	LECTURERPOINT INT ,
	CLASSIFY NVARCHAR(50) ,
	CREATEBY CHAR(10) ,
	UPDATEBY CHAR(10) ,
	UPDATEDATE DATETIME 
)
GO

CREATE TABLE CLASSIFY(
	ID INT IDENTITY   PRIMARY KEY,
	NAME NVARCHAR(50) ,
	POINTMIN INT ,
	POINTMAX INT ,
	ORDERBY INT 
)
GO

INSERT INTO  DEPARTMENT VALUES (N'Công nghệ thông tin', 4)
GO
INSERT INTO  COURSE VALUES
 ('K21', '2021-2025'),
 ('K22', '2022-2026'),
 ('K23', '2023-2027')
 GO
INSERT INTO  CLASS VALUES
('K21CNT1','K21',1,0),
('K21CNT2','K21',1,0),
('K22CNT1','K22',1,0),
('K22CNT2','K22',1,0),
('K22CNT3','K22',1,0),
('K22CNT4','K22',1,0),
('K23CNT1','K23',1,0),
('K23CNT2','K23',1,0),
('K23CNT3','K23',1,0),
('K23CNT4','K23',1,0)
GO
INSERT INTO  POSITION VALUES
('SV', N'Sinh viên'),
('LT',N'Lớp trưởng'),
('GV',N'Giảng viên')
GO
INSERT INTO  LECTURER VALUES
('GV00000001','Đàm Luận',1,'GV','19970917','luan.dv@ntu-hn.edu.vn','0976897563',1)
GO


INSERT INTO  STUDENT VALUES
('2110900054',N'Nguyễn Ngọc Việt','20030813','','',0,1,'LT',1),
('2110900009',N'Đặng Trần Đức','20030802','','',0,1,'SV',1),
('2110900025',N'Lê Đình Hùng','20030209','','',0,1,'SV',1),
('2110900052',N'Nguyễn Mạnh Hùng','20030807','','',0,1,'SV',1),
('2110900037',N'Nguyễn Tuấn Tài','20030711','','',0,1,'SV',1)

INSERT INTO  [dbo].[Roles] VALUES
('admin',1)
INSERT INTO  [dbo].[ACCOUNTADMIN] ([USERNAME],[PASSWORD],ISACTIVE,ROLEID) VALUES
('admin','12345',1,1)
INSERT INTO  AccountStudent (USERNAME,PASSWORD,STUDENTID) VALUES
('2110900054',N'12345','2110900054'),
('2110900009',N'12345','2110900009'),
('2110900025',N'12345','2110900025'),
('2110900052',N'12345','2110900052'),
('2110900037',N'12345','2110900037')
INSERT INTO  AccountLecturer(USERNAME,PASSWORD,LecturerID) VALUES
('GV00000001',N'12345','GV00000001')
